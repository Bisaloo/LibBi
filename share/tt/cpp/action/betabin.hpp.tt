[%
## @file
##
## @author Sebastian Funk <sebastian.funk@lshtm.ac.uk>
%]

[%-
n = action.get_named_arg('n');
alpha = action.get_named_arg('alpha');
beta = action.get_named_arg('beta');
%]

[%-PROCESS action/misc/header.hpp.tt-%]

/**
 * Action: [% action.get_name %].
 */
class [% class_name %] {
public:
  [% std_action %]

  [% declare_action_static_function('simulate') %]
  [% declare_action_static_function('sample') %]
  [% declare_action_static_function('logdensity') %]
  [% declare_action_static_function('maxlogdensity') %]
};

#include "bi/random/generic.hpp"

[% std_action_static_function('simulate') %]

[% sig_action_static_function('sample') %] {
  [% alias_dims(action) %]
  [% fetch_parents(action) %]
  [% offset_coord(action) %]

  real n = [% n.to_cpp %];
  real a = [% alpha.to_cpp %];
  real b = [% beta.to_cpp %];
  real u = bi::betabin(rng, n, a, b);
  
  [% put_output(action, 'u') %]
}

[% sig_action_static_function('logdensity') %] {
  [% alias_dims(action) %]
  [% fetch_parents(action) %]
  [% offset_coord(action) %]

  real n = [% n.to_cpp %];
  real a = [% alpha.to_cpp %];
  real b = [% beta.to_cpp %];
  real logZ;
  
  real xy = pax.template fetch_alt<target_type>(s, p, cox_.index());

  logZ = bi::lgamma(a) + bi::lgamma(b) - bi::lgamma(a + b);
  lp += bi::lgamma(n + 1) - bi::lgamma(xy + 1) - bi::lgamma(n - xy + 1) +
      bi::lgamma(xy + a) + bi::lgamma(n - xy + b) - bi::lgamma(n + a + b) -
      logZ;

  [% put_output(action, 'xy') %]
}

[% sig_action_static_function('maxlogdensity') %] {
  [% alias_dims(action) %]
  [% fetch_parents(action) %]
  [% offset_coord(action) %]

  real xy = pax.template fetch_alt<target_type>(s, p, cox_.index());

  lp = BI_INF;

  [% put_output(action, 'xy') %]
}

[%-PROCESS action/misc/footer.hpp.tt-%]
