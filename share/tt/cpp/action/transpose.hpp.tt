[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
%]

[%-
A = action.get_named_arg('A');
%]

[%-PROCESS action/misc/header.hpp.tt-%]

/**
 * Action: [% action.get_name %].
 */
class [% class_name %] {
public:
  [% std_action %]

  [% declare_action_static_matrix_function('simulate') %]
  [% declare_action_dynamic_matrix_function('simulate') %]
};

#include "bi/math/view.hpp"
#include "bi/math/operation.hpp"

[% sig_action_static_matrix_function('simulate') %] {
  const int N1 = [% A.get_var.get_shape.get_size1 %];
  const int N2 = [% A.get_var.get_shape.get_size2 %];

  BOOST_AUTO(A, bi::reshape(bi::vector_as_column_matrix(pax.template fetch<Var[% A.get_var.get_id %]>(s, p)), N1, N2));
  BOOST_AUTO(B, bi::reshape(bi::vector_as_column_matrix(pax.template fetch<target_type>(s, p)), N2, N1));
  
  bi::transpose(A, B);
}

[% sig_action_dynamic_matrix_function('simulate') %] {  
  simulates(s, p, pax, x);
}

[%-PROCESS action/misc/footer.hpp.tt-%]
