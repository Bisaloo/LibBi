[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev$
## $Date$
%]

[%
# client programs
CLIENTS = [ 'simulate', 'pf', 'ekf', 'rtss', 'nm', 'pmmh', 'smc2', 'test' ];
%]

AUTOMAKE_OPTIONS = subdir-objects

# compile and link flags
AM_CPPFLAGS = -Isrc -I../../libbi/src -I../../lib/src $(OPENMP_CPPFLAGS) $(CUDA_CPPFLAGS) -DTHRUST_HOST_SYSTEM=THRUST_HOST_SYSTEM_OMP
AM_CXXFLAGS = $(OPENMP_CXXFLAGS)
AM_LDFLAGS = -L../../libbi/.libs -L../../lib/.libs $(OPENMP_LDFLAGS) $(CUDA_LDFLAGS)

# CUDA files setup
if ENABLE_MPI
if ENABLE_VAMPIR
NVCC = mpicxx-vt --vt:cxx "perl nvcc_wrapper.pl nvcc" --vt:inst manual --vt:mpi
else
NVCC = perl nvcc_wrapper.pl nvcc `mpicxx -showme:compile`
endif
else
NVCC = perl nvcc_wrapper.pl nvcc
endif

NVCC_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS) $(DEFS)
NVCC_CXXFLAGS = $(CUDA_CXXFLAGS) -w -arch sm_13 -Xcompiler="$(AM_CXXFLAGS) $(CXXFLAGS)"

if ENABLE_INTEL
  NVCC_CXXFLAGS += -ccbin icc -Xcompiler=-gcc
endif

# programs
bin_PROGRAMS =[% FOREACH client IN CLIENTS %] [% client %]_cpu [% client %]_gpu[% END %]

[% FOREACH client IN CLIENTS %]
[% client %]_cpu_LDADD = $(DEPS_LIBS)
[% client %]_cpu_SOURCES = src/[% client %]_cpu.cpp src/model/Model[% model.get_name %].cpp
[% client %]_gpu_LDADD = $(DEPS_LIBS)
[% client %]_gpu_SOURCES = src/[% client %]_gpu.cu src/model/Model[% model.get_name %].cpp
[% END %]

# other
dist_noinst_SCRIPTS = autogen.sh

## command line options
if ENABLE_SINGLE
CPPFLAGS += -DENABLE_SINGLE
endif

if ENABLE_CUDA
CPPFLAGS += -DENABLE_CUDA
endif

if ENABLE_SSE
CPPFLAGS += -DENABLE_SSE
CXXFLAGS += -msse3
endif

if ENABLE_MKL
CXXFLAGS += -DENABLE_MKL
endif

if ENABLE_MPI
CPPFLAGS += -DENABLE_MPI
endif

if ENABLE_VAMPIR
CPPFLAGS += -DENABLE_VAMPIR -DVTRACE
endif

# ensure dependency files for CUDA builds are included
[%-FOREACH client IN CLIENTS %]
include src/$(DEPDIR)/[% client %]_gpu.Po
[% END %]

# suffix rules for CUDA files
.cu.o:
	depbase=`echo $@ | sed 's|[^/]*$$|.deps/&|;s|\.o$$||'` && \
	$(NVCC) -M $(NVCC_CPPFLAGS) -o $$depbase.Tpo $< && \
	$(NVCC) -c $(NVCC_CXXFLAGS) $(NVCC_CPPFLAGS) -o $@ $< && \
	echo -n 'src/' > $$depbase.Po && \
	cat $$depbase.Tpo >> $$depbase.Po && \
	rm -f $$depbase.Tpo
