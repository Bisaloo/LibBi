[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev$
## $Date$
%]

[%
# client programs
CLIENTS = [ 'simulate', 'pf', 'ekf', 'rtss', 'nm', 'pmmh' ];
%]

AUTOMAKE_OPTIONS = subdir-objects

# compile and link flags
AM_CPPFLAGS = $(OPENMP_CPPFLAGS) -Isrc -I../../libbi/src -I../../lib/src -I/usr/local/cuda/include
AM_CXXFLAGS = $(OPENMP_CXXFLAGS)
AM_LDFLAGS = $(OPENMP_LDFLAGS) -L../../libbi/.libs -L../../lib/.libs -L/usr/local/cuda/lib -L/usr/local/cuda/lib64

# CUDA files setup
CUDA = nvcc
CUDAFLAGS = -w -arch sm_13 -Xcompiler="$(OPENMP_CXXFLAGS)"
[%# for register counts etc: -Xptxas="-v" %]

# programs
bin_PROGRAMS =[% FOREACH client IN CLIENTS %] [% client %]_cpu [% client %]_gpu[% END %]

[% FOREACH client IN CLIENTS %]
[% client %]_cpu_LDADD = $(DEPS_LIBS)
[% client %]_cpu_SOURCES = src/[% client %]_cpu.cpp src/model/Model[% model.get_name %].cpp
[% client %]_gpu_LDADD = $(DEPS_LIBS)
[% client %]_gpu_SOURCES = src/[% client %]_gpu.cu src/model/Model[% model.get_name %].cpp
[% END %]

# other
dist_noinst_SCRIPTS = autogen.sh

# command line options
if ENABLE_DOUBLE
CUDAFLAGS += -DENABLE_DOUBLE
CXXFLAGS += -DENABLE_DOUBLE
endif

if ENABLE_GPU
CUDAFLAGS += -DENABLE_GPU
CXXFLAGS += -DENABLE_GPU -DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_OMP
else
CUDAFLAGS += -Xcompiler -DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_OMP
CXXFLAGS += -DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_OMP
endif

if ENABLE_SSE
CXXFLAGS += -DENABLE_SSE -msse3
endif

# suffix rules for CUDA files
.cu.o:
	$(CUDA) -c $(CUDAFLAGS) $(AM_CPPFLAGS) $(CPPFLAGS) -o $@ $<

.cu.lo:
	$(LIBTOOL) --tag=CC --mode=compile $(CUDA) -c $(CUDAFLAGS) $(AM_CPPFLAGS) $(CPPFLAGS) -o $@ $< -static
