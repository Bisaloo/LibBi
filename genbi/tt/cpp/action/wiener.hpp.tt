[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev$
## $Date$
%]

[%-PROCESS action/misc/header.hpp.tt-%]

[% create_eval_var_target(action) %]

/**
 * Action: [% action.get_name %].
 */
class [% class_name %] {
public:
  /**
   * Target type.
   */
  typedef Target[% action.get_id %] target_type;

  [% declare_action_dynamic_function('sample') %]
  [% declare_action_dynamic_function('logdensity') %]
  [% declare_action_dynamic_function('maxlogdensity') %]
};

#include "bi/math/pi.hpp"

[% sig_action_dynamic_function('sample') %] {
  real mu, sigma, u;

  mu = 0.0;
  sigma = BI_MATH_SQRT(BI_MATH_ABS(t2 - t1));
  u = rng.gaussian(mu, sigma);
    
  x.template put<target_type>(p, ix, u);
}

[% sig_action_dynamic_function('logdensity') %] {
  real sigma, xy;

  sigma = BI_MATH_SQRT(BI_MATH_ABS(t2 - t1));  
  xy = pax.template fetch_alt<target_type>(p, ix);

  lp += BI_REAL(-0.5)*BI_MATH_POW(xy/sigma, BI_REAL(2.0)) - BI_REAL(BI_HALF_LOG_TWO_PI) - BI_MATH_LOG(sigma);

  x.template put<target_type>(p, ix, xy);
}

[% sig_action_dynamic_function('maxlogdensity') %] {
  real sigma, xy;

  sigma = BI_MATH_SQRT(BI_MATH_ABS(t2 - t1));    
  xy = pax.template fetch_alt<target_type>(p, ix);
  lp += -BI_REAL(BI_HALF_LOG_TWO_PI) - BI_MATH_LOG(sigma);
  x.template put<target_type>(p, ix, xy);
}

[%-PROCESS action/misc/footer.hpp.tt-%]
