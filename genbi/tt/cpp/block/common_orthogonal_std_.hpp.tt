[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev$
## $Date$
%]

[% USE Math %]

[%-
std = block.get_action.get_named_arg('std');
target = block.get_action.get_target;
-%]

[%-PROCESS block/misc/header.hpp.tt-%]

/**
 * Block: common_orthogonal_std_.
 */
class [% class_name %] {
public:
  [% declare_static_function('sample') %]
  [% declare_static_function('simulate') %]
  [% declare_static_function('density') %]
  [% declare_static_function('logdensity') %]

  [% declare_dynamic_function('sample') %]
  [% declare_dynamic_function('simulate') %]
  [% declare_dynamic_function('density') %]
  [% declare_dynamic_function('logdensity') %]
};

#include "bi/primitive/matrix_primitive.hpp"

[% sig_static_function('sample') %] {
  simulate(s);
}

[% sig_static_function('simulate') %] {
  BOOST_AUTO(std, [% get_var(std) %]);
  BOOST_AUTO(target, [% get_var(target) %]);
  
  int cols = [% Math.sqrt(target.get_var.get_size) %];
  set_rows(columns(target, 0, cols, cols + 1), vec(std));
}

[% sig_static_function('density') %] {
  simulate(s);
}

[% sig_static_function('logdensity') %] {
  simulate(s);
}

[% sig_dynamic_function('sample') %] {
  simulate(t1, t2, onDelta, s);
}

[% sig_dynamic_function('simulate') %] {
  if (onDelta) {
    simulate(s);
  }
}

[% sig_dynamic_function('density') %] {
  simulate(t1, t2, onDelta, s);
}

[% sig_dynamic_function('logdensity') %] {
  simulate(t1, t2, onDelta, s);
}

[% PROCESS 'block/misc/footer.hpp.tt' %]
