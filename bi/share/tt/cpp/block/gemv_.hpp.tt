[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev$
## $Date$
%]

[%-
A = block.get_action.get_named_arg('A');
x = block.get_action.get_named_arg('x');
y = block.get_action.get_target;
-%]

[%-PROCESS block/misc/header.hpp.tt-%]

#include "bi/math/multi_operation.hpp"

/**
 * Block: gemv_.
 */
class [% class_name %] {
public:
  [% declare_static_function('simulate') %]
  [% declare_static_function('sample') %]
  [% declare_static_function('logdensity') %]
  [% declare_static_function('maxlogdensity') %]

  [% declare_dynamic_function('simulate') %]
  [% declare_dynamic_function('sample') %]
  [% declare_dynamic_function('logdensity') %]
  [% declare_dynamic_function('maxlogdensity') %]
};

#include "bi/primitive/matrix_primitive.hpp"

[% sig_static_function('simulate') %] {
  BOOST_AUTO(A, reshape([% get_var(A) %], P*rows, cols));
  BOOST_AUTO(x, vec([% get_var(x) %]));
  BOOST_AUTO(y, vec([% get_var(y) %]));
      
  bi::multi_gemv(P, 1.0, reshape(A, P*rows, cols), x, 0.0, y);
}

[% sig_static_function('sample') %] {
  simulate(s);
}

[% sig_static_function('logdensity') %] {
  simulate(s);
}

[% sig_static_function('maxlogdensity') %] {
  simulate(s);
}

[% sig_dynamic_function('simulate') %] {
  if (onDelta) {
    simulate(s);
  }
}

[% sig_dynamic_function('sample') %] {
  simulate(t1, t2, onDelta, s);
}

[% sig_dynamic_function('logdensity') %] {
  simulate(t1, t2, onDelta, s);
}

[% sig_dynamic_function('maxlogdensity') %] {
  simulate(t1, t2, onDelta, s);
}

[% PROCESS 'block/misc/footer.hpp.tt' %]
