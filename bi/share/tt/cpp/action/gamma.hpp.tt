[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev$
## $Date$
%]

[%-
shape = action.get_named_arg('shape');
scale = action.get_named_arg('scale');
%]

[%-PROCESS action/misc/header.hpp.tt-%]

[% create_eval_var_target(action) %]

/**
 * Action: [% action.get_name %].
 */
class [% class_name %] {
public:
  /**
   * Target type.
   */
  typedef Target[% action.get_id %] target_type;

  [% declare_action_static_function('shape') %]
  [% declare_action_static_function('scale') %]
  [% declare_action_static_function('sample') %]
  [% declare_action_static_function('logdensity') %]
  [% declare_action_static_function('maxlogdensity') %]
};

#include "bi/math/pi.hpp"

[% sig_action_static_function('shape') %] {
  [% alias_dims(action) %]
  [% read_input(shape) %]
  
  x = [% shape.to_cpp %];
}

[% sig_action_static_function('scale') %] {
  [% alias_dims(action) %]
  [% read_input(scale) %]
  
  x = [% scale.to_cpp %];
}

[% sig_action_static_function('sample') %] {
  real sh, sc, u;
    
  shape(p, cox, pax, sh);
  scale(p, cox, pax, sc);
  u = rng.gamma(sh, sc);
    
  x.template put<target_type>(p, ix, u);
}

[% sig_action_static_function('logdensity') %] {
  real sh, sc, logZ, xy;
    
  shape(p, cox, pax, sh);
  scale(p, cox, pax, sc);
  
  xy = pax.template fetch_alt<target_type>(p, ix);

  logZ = BI_MATH_LGAMMA(sh) + sh*BI_MATH_LOG(sc);
  lp += (sh - BI_REAL(1.0))*BI_MATH_LOG(xy) - xy/sc - logZ;

  x.template put<target_type>(p, ix, xy);
}

[% sig_action_static_function('maxlogdensity') %] {
  real sh, sc, xy;
    
  shape(p, cox, pax, sh);
  scale(p, cox, pax, sc);

  xy = pax.template fetch_alt<target_type>(p, ix);
    
  [% IF shape.is_common && scale.is_common %]
  lp += (sh - BI_REAL(1.0))*(BI_MATH_LOG(sh - BI_REAL(1.0)) + BI_REAL(1.0))) -
      BI_MATH_LGAMMA(sh) - BI_MATH_LOG(sc);
  [% ELSE %]
  lp = BI_REAL(1.0/0.0);
  [% END %]

  x.template put<target_type>(p, ix, xy);
}

[%-PROCESS action/misc/footer.hpp.tt-%]
