[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev$
## $Date$
%]

[%-PROCESS action/misc/header.hpp.tt-%]

/**
 * Action: [% action.get_name %].
 */
class [% class_name %] {
public:
  [% std_action %]

  [% declare_action_dynamic_function('simulate') %]
  [% declare_action_dynamic_function('sample') %]
  [% declare_action_dynamic_function('logdensity') %]
  [% declare_action_dynamic_function('maxlogdensity') %]
};

#include "bi/math/pi.hpp"

[% sig_action_dynamic_function('simulate') %] {
  x.template fetch<target_type>(s, p, ix) = pax.template fetch_alt<target_type>(s, p, ix);
}

[% sig_action_dynamic_function('sample') %] {
  real mu, sigma, u;

  mu = 0.0;
  sigma = bi::sqrt(bi::abs(t2 - t1));
  u = rng.gaussian(mu, sigma);
    
  x.template fetch<target_type>(s, p, ix) = u;
}

[% sig_action_dynamic_function('logdensity') %] {
  T1 sigma;

  sigma = bi::sqrt(bi::abs(t2 - t1));  
  BOOST_AUTO(xy, pax.template fetch_alt<target_type>(s, p, ix));

  lp += BI_REAL(-0.5)*bi::pow(xy/sigma, BI_REAL(2.0)) - BI_REAL(BI_HALF_LOG_TWO_PI) - bi::log(sigma);

  x.template fetch<target_type>(s, p, ix) = xy;
}

[% sig_action_dynamic_function('maxlogdensity') %] {
  T1 sigma = bi::sqrt(bi::abs(t2 - t1));
      
  BOOST_AUTO(xy, pax.template fetch_alt<target_type>(s, p, ix));
  lp += -BI_REAL(BI_HALF_LOG_TWO_PI) - bi::log(sigma);

  x.template fetch<target_type>(s, p, ix) = xy;
}

[%-PROCESS action/misc/footer.hpp.tt-%]
