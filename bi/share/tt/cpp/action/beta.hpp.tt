[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev: 2867 $
## $Date: 2012-07-31 15:38:06 +0800 (Tue, 31 Jul 2012) $
%]

[%-
alpha = action.get_named_arg('alpha');
beta = action.get_named_arg('beta');
%]

[%-PROCESS action/misc/header.hpp.tt-%]

/**
 * Action: [% action.get_name %].
 */
class [% class_name %] {
public:
  [% std_action %]

  [% declare_action_static_function('alpha') %]
  [% declare_action_static_function('beta') %]
  
  [% declare_action_static_function('simulate') %]
  [% declare_action_static_function('sample') %]
  [% declare_action_static_function('logdensity') %]
  [% declare_action_static_function('maxlogdensity') %]
};

#include "bi/math/pi.hpp"

[% sig_action_static_function('alpha') %] {
  [% alias_dims(action) %]
  [% fetch_parents(alpha) %]
  
  x = [% alpha.to_cpp %];
}

[% sig_action_static_function('beta') %] {
  [% alias_dims(action) %]
  [% fetch_parents(beta) %]
  
  x = [% beta.to_cpp %];
}

[% std_action_static_function('simulate') %]

[% sig_action_static_function('sample') %] {
  real a, b, u;
    
  alpha(s, p, cox, pax, a);
  beta(s, p, cox, pax, b);
  u = rng.beta(a, b);
  
  x.template fetch<target_type>(s, p, ix) = u;
}

[% sig_action_static_function('logdensity') %] {
  T1 a, b, logZ;
    
  alpha(s, p, cox, pax, a);
  beta(s, p, cox, pax, b);
  
  BOOST_AUTO(xy, pax.template fetch_alt<target_type>(s, p, ix));

  logZ = bi::lgamma(a) + bi::lgamma(b) - bi::lgamma(a + b);
  lp += (a - BI_REAL(1.0))*bi::log(xy) +
      (b - BI_REAL(1.0))*bi::log(BI_REAL(1.0) - xy) - logZ;

  x.template fetch<target_type>(s, p, ix) = xy;
[% sig_action_static_function('maxlogdensity') %] {
  T1 a, b;
    
  alpha(s, p, cox, pax, a);
  beta(s, p, cox, pax, b);

  BOOST_AUTO(xy, pax.template fetch_alt<target_type>(s, p, ix));

  lp = BI_REAL(1.0/0.0);

  x.template fetch<target_type>(s, p, ix) = xy;
[%-PROCESS action/misc/footer.hpp.tt-%]
